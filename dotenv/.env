# common
name=zhangsan
age=20

VAR=one
VAR_2=two

# Non-existing values are replaced with an empty string
# value: ''(empty string)
aa=$NOPE

# All the letters after $ symbol are treated as the variable name to replace
# value: 'one'
bb=$VAR

# Double quotes do not affect the substitution
# value: 'one'
# cc="$VAR"

# Different syntax, same result
# value: 'one'
dd=${VAR}

# Curly braces are useful in cases when we need to use a variable with non-alphanumeric name
# value: 'one_2' since $ with no curly braces stops after first non-alphanumeric symbol
ee=$VAR_2
# value: 'two'
ff=${VAR_2}

# The replacement can be escaped with either single quotes or a backslash:
# value: '$VAR'
gg='$VAR'
# value: '$VAR'
hh=\$VAR

# Environment variables are used in the substutution and always override the local variables
# value: the contents of the $PATH environment variable
ii=$PATH
PATH="My local variable value"
# value: the contents of the $PATH environment variable, even though the local variable is defined
jj=$PATH

